name: Publish
run-name: Publish ${{ inputs.semver-bump }} bump

on:
  workflow_dispatch:
    inputs:
      semver-bump:
        description: Semver bump release type
        required: true
        type: choice
        default: prerelease
        options:
          - major
          - minor
          - patch
          - prerelease

concurrency: publish

jobs:
  check-build-params:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - name: changelog entries
        if: ${{ inputs.semver-bump != 'prerelease' }}
        run: npx --yes @eighty4/changelog check

  verify:
    uses: ./.github/workflows/ci_verify.yml
    needs: check-build-params

  create-git-tag:
    runs-on: ubuntu-latest
    needs: verify
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - id: bump
        run: |
          GIT_TAG=$(npm version ${{ inputs.semver-bump }} --no-git-tag-version)
          echo "version=${GIT_TAG:1}" >> "$GITHUB_OUTPUT"
          echo "tag=$GIT_TAG" >> "$GITHUB_OUTPUT"
      - if: inputs.semver-bump != 'prerelease'
        env:
          VERSION: ${{ steps.bump.outputs.version }}
        run: npx --yes @eighty4/changelog rollover "v$VERSION"
      - id: push
        env:
          GIT_TAG: ${{ steps.bump.outputs.tag }}
          NPM_TAG: ${{ inputs.semver-bump == 'prerelease' && 'next' || 'latest' }}
        run: |
          git config --global user.name "Adam McKee"
          git config --global user.email "adam.be.g84d@gmail.com"
          git add package.json CHANGELOG.md
          git commit -m "publishing $GIT_TAG as @$NPM_TAG"
          git tag $GIT_TAG
          git push --atomic origin main $GIT_TAG
    outputs:
      tag: ${{ steps.bump.outputs.tag }}
      version: ${{ steps.bump.outputs.version }}

  npm-publish:
    needs: create-git-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ needs.create-git-tag.outputs.tag }}
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          registry-url: https://registry.npmjs.org
      - uses: pnpm/action-setup@v4
      - run: pnpm i
      - run: pnpm run build
      - name: publish
        env:
          NPM_TAG: ${{ inputs.semver-bump == 'prerelease' && 'next' || 'latest' }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish --access public --no-git-checks --tag $NPM_TAG

  create-release-notes:
    runs-on: ubuntu-latest
    needs: [create-git-tag, npm-publish]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ needs.create-git-tag.outputs.tag }}
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - id: gen
        env:
          CHANGELOG_TAG: ${{ inputs.semver-bump == 'prerelease' && 'Unreleased' || needs.create-git-tag.outputs.tag }}
          GIT_TAG: ${{ needs.create-git-tag.outputs.tag }}
          NPM_TAG: ${{ inputs.semver-bump == 'prerelease' && 'next' || 'latest' }}
        run: |
          echo "## Published to npm" >> release_notes.md
          echo >> release_notes.md
          PKG_NAME=$(cat package.json | jq -r ".name")
          VERSION=${GIT_TAG:1}
          echo "[$PKG_NAME](https://www.npmjs.com/package/$PKG_NAME/v/$VERSION)" >> release_notes.md
          echo >> release_notes.md
          echo "\`\`\`npm i -g $PKG_NAME@$NPM_TAG\`\`\`" >> release_notes.md
          echo >> release_notes.md

          echo "## Release notes" >> release_notes.md
          echo >> release_notes.md
          npx --yes @eighty4/changelog get "$CHANGELOG_TAG" >> release_notes.md
          echo >> release_notes.md

          RELEASE_NOTES=$(cat release_notes.md | base64 -w 0)
          echo "notes=$RELEASE_NOTES" >> "$GITHUB_OUTPUT"
    outputs:
      notes: ${{ steps.gen.outputs.notes }}

  create-gh-release:
    uses: ./.github/workflows/gh_release.yml
    needs: [create-git-tag, create-release-notes, npm-publish]
    permissions:
      contents: write
    secrets: inherit
    with:
      title: '${{ needs.create-git-tag.outputs.tag }}'
      release_notes: ${{ needs.create-release-notes.outputs.notes }}
      prerelease: ${{ inputs.semver-bump == 'prerelease' && 'true' || 'false' }}
      latest: ${{ inputs.semver-bump == 'prerelease' && 'false' || 'true' }}
      tag: ${{ needs.create-git-tag.outputs.tag }}
